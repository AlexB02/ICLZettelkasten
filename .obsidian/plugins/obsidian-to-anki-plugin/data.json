{"settings":{"CUSTOM_REGEXPS":{"Basic":"","Basic (and reversed card)":"","Basic (and reversed card)-3956c":"","Basic (optional reversed card)":"","Basic (type in the answer)":"","Cloze":""},"FILE_LINK_FIELDS":{"Basic":"Front","Basic (and reversed card)":"Front","Basic (and reversed card)-3956c":"Front","Basic (optional reversed card)":"Front","Basic (type in the answer)":"Front","Cloze":"Text"},"CONTEXT_FIELDS":{},"FOLDER_DECKS":{"40008":"","40009":""},"FOLDER_TAGS":{"40008":"","40009":""},"Syntax":{"Begin Note":"START","End Note":"END","Begin Inline Note":"STARTI","End Inline Note":"ENDI","Target Deck Line":"TARGET DECK","File Tags Line":"FILE TAGS","Delete Note Line":"DELETE","Frozen Fields Line":"FROZEN"},"Defaults":{"Tag":"Obsidian_to_Anki","Deck":"Default","Scheduling Interval":0,"Add File Link":false,"Add Context":false,"CurlyCloze":false,"CurlyCloze - Highlights to Clozes":false,"ID Comments":true,"Add Obsidian Tags":true}},"Added Media":[],"File Hashes":{"Weighted Graph.md":"2255091fd802ed6ab591ac5990fc38c7","Tree.md":"065d1da58313369633b985509a644f55","Thread.md":"620ec980a623cfdc6f43edbd5c822962","Spanning Tree.md":"44e19fb4200c48eee09d4c94f1a191db","Shortest Path.md":"389ee64492e2d838b612ec4945ae40f0","Shortest Path Algorithm.md":"60c7fe6c196f9eb6a6faf1c458053561","Prim's MST Algorithm.md":"d778d39d9de5b41647f4525a50d443cc","Path.md":"31c2f6e9c87215b3b97615b541e5c4f9","Minimum Spanning Tree.md":"c33db2e3ef72f924c7ef29a65a6e8b01","MST Algorithm.md":"f7a5d83929e2fae8d95a998a7fad203d","Locking.md":"99e0d5688cb93e81c8c0efcb1ccc6975","Kruskal's MST Algorithm.md":"5d0b20fb0d78facd885ed96c16123169","Java.md":"4bc7d03eb786fa8fdda8328d23db42d4","Graph.md":"d559755e5b214e09bc8fe1c00c649b77","Directed Weighted Graph.md":"211d3ffcbbe0148225b0e1bd4fa4f8b7","Dijkstra's Algorithm.md":"dc5b900823d951c2af985e5dd31ecf14","Date (Java).md":"0bfb5eb5af7909bd2e682e4895598c65","Connected Graph.md":"6f34b6f57571b1c9fcdc692ce531fdeb","Concurrent.md":"d7be7d07ec00ca3dff9c60d62e55d22b","Abstract Data Type.md":"2300163f3a7786d160ede7f60b78447b","17-02-2021.md":"b078ffd28db767c502ac367053f6e0ac","40008/Weighted Graph.md":"9a9807c01e19eb4659dd4c6f5d685736","40008/Tree.md":"54a3e773bdc4513257101ef54ecb8830","40008/Spanning Tree.md":"ba7a2ace673a89fc5236019c2f5d3ff9","40008/Shortest Path Algorithm.md":"2656fb4d1044c0c37a75c165403be2e0","40008/Shortest Path.md":"b288839d9a61de4c0fe8a5aae0ee23e5","40008/Prim's MST Algorithm.md":"038fdb15a5965b2fbe7c37dc89282f9a","40008/Path.md":"3b538a2befecac59d49b751e64b9ce96","40008/MST Algorithm.md":"1461575deddcdbe3917605c5eb42b922","40008/Minimum Spanning Tree.md":"09d66ba7a4d36192a19e1746d716d1d0","40008/Kruskal's MST Algorithm.md":"30b4af75fcba0d2f8d9023a9e308e7a6","40008/Graph.md":"09c6884e33dcf129b83f15c162d195a4","40008/Directed Weighted Graph.md":"2c047912a68d3484ee9c1aad16cc21b8","40008/Dijkstra's Algorithm.md":"93ae7a8ac0d533f97f3caaace36a1b36","40008/Connected Graph.md":"37a938f34e2502cf5ad4e475ff9e72f5","40008/A* Shortest Path Algorithm.md":"6173b8b84fb59b94e4cd074d61d7dace","40009/Thread.md":"1a19e84bf794d6c03f2db67409590b6c","40009/Reference Data Type.md":"ddf9d43c84bf1b4e091fb6d3611e30e3","40009/Primitive Data Types.md":"22a85e99e160d432079a18958cdf3f98","40009/Non-Linear Data Structure.md":"c2f574e572cecd9fd87a97b9f833492b","40009/Locking.md":"6e72226a28ab70c73e463fa641d70dc8","40009/List.md":"39a81a90611265bfe3d99c5e839438e0","40009/Linked List.md":"0f3a386f30cc5f5abb5dc1786180a942","40009/Linear Traversal.md":"21ba14dfada73c476506ced8020d990d","40009/Linear Data Structure.md":"59ab260e6852e43b78d8dcdc11713146","40009/JUnit.md":"bd273be252eee0accb6f065eeee068f2","40009/Java Virtual Machine.md":"d41d8cd98f00b204e9800998ecf8427e","40009/Java.md":"f4da8d9ae9350db0863415005986e64a","40009/Interface.md":"33a00b29c3f2f763cebb0ee102b6804b","40009/Heap.md":"d04de2b5878a3f49455865859e72f199","40009/Functional Interface.md":"d371e1b82e755f577f0d34a05244aef4","40009/Encapsulation.md":"064d7c68b4195456341206f29e7127e6","40009/Date (Java).md":"fb25305c42fc59d4aea6fafbe6485f37","40009/Data Type.md":"2cb23ada423452a42776d44f130bd2c7","40009/Data Race.md":"fa2b7b0f29043edf7b6a62cede06fbfd","40009/Contract.md":"d6ccb6ccd41b2c6be46f2edd988efc98","40009/Concurrent.md":"90a21c46a43ea0e5efad8d71096b62d6","40009/Collections.md":"905a5e6884e63c19e6cc9fc0e47f8849","40009/Class.md":"d6697ab0de4cecf6b2627f751d63d790","40009/Array.md":"0c5db4db246ea4f35b4b9248579a27c2","40009/Abstract Data Type.md":"d5f09dfc57481f68785f454b27cf8120"},"fields_dict":{"Basic":["Front","Back"],"Basic (and reversed card)":["Front","Back"],"Basic (and reversed card)-3956c":["Front","Back"],"Basic (optional reversed card)":["Front","Back","Add Reverse"],"Basic (type in the answer)":["Front","Back"],"Cloze":["Text","Back Extra"]}}